# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tkrzw_rpc_pb2 as tkrzw__rpc__pb2


class DBMServiceStub(object):
    """Definition of the database service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Echo = channel.unary_unary(
                '/tkrzw.DBMService/Echo',
                request_serializer=tkrzw__rpc__pb2.EchoRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.EchoResponse.FromString,
                )
        self.Inspect = channel.unary_unary(
                '/tkrzw.DBMService/Inspect',
                request_serializer=tkrzw__rpc__pb2.InspectRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.InspectResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/tkrzw.DBMService/Get',
                request_serializer=tkrzw__rpc__pb2.GetRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.GetResponse.FromString,
                )
        self.GetMulti = channel.unary_unary(
                '/tkrzw.DBMService/GetMulti',
                request_serializer=tkrzw__rpc__pb2.GetMultiRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.GetMultiResponse.FromString,
                )
        self.Set = channel.unary_unary(
                '/tkrzw.DBMService/Set',
                request_serializer=tkrzw__rpc__pb2.SetRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.SetResponse.FromString,
                )
        self.SetMulti = channel.unary_unary(
                '/tkrzw.DBMService/SetMulti',
                request_serializer=tkrzw__rpc__pb2.SetMultiRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.SetMultiResponse.FromString,
                )
        self.Remove = channel.unary_unary(
                '/tkrzw.DBMService/Remove',
                request_serializer=tkrzw__rpc__pb2.RemoveRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.RemoveResponse.FromString,
                )
        self.RemoveMulti = channel.unary_unary(
                '/tkrzw.DBMService/RemoveMulti',
                request_serializer=tkrzw__rpc__pb2.RemoveMultiRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.RemoveMultiResponse.FromString,
                )
        self.Append = channel.unary_unary(
                '/tkrzw.DBMService/Append',
                request_serializer=tkrzw__rpc__pb2.AppendRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.AppendResponse.FromString,
                )
        self.AppendMulti = channel.unary_unary(
                '/tkrzw.DBMService/AppendMulti',
                request_serializer=tkrzw__rpc__pb2.AppendMultiRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.AppendMultiResponse.FromString,
                )
        self.CompareExchange = channel.unary_unary(
                '/tkrzw.DBMService/CompareExchange',
                request_serializer=tkrzw__rpc__pb2.CompareExchangeRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.CompareExchangeResponse.FromString,
                )
        self.Increment = channel.unary_unary(
                '/tkrzw.DBMService/Increment',
                request_serializer=tkrzw__rpc__pb2.IncrementRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.IncrementResponse.FromString,
                )
        self.CompareExchangeMulti = channel.unary_unary(
                '/tkrzw.DBMService/CompareExchangeMulti',
                request_serializer=tkrzw__rpc__pb2.CompareExchangeMultiRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.CompareExchangeMultiResponse.FromString,
                )
        self.Count = channel.unary_unary(
                '/tkrzw.DBMService/Count',
                request_serializer=tkrzw__rpc__pb2.CountRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.CountResponse.FromString,
                )
        self.GetFileSize = channel.unary_unary(
                '/tkrzw.DBMService/GetFileSize',
                request_serializer=tkrzw__rpc__pb2.GetFileSizeRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.GetFileSizeResponse.FromString,
                )
        self.Clear = channel.unary_unary(
                '/tkrzw.DBMService/Clear',
                request_serializer=tkrzw__rpc__pb2.ClearRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.ClearResponse.FromString,
                )
        self.Rebuild = channel.unary_unary(
                '/tkrzw.DBMService/Rebuild',
                request_serializer=tkrzw__rpc__pb2.RebuildRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.RebuildResponse.FromString,
                )
        self.ShouldBeRebuilt = channel.unary_unary(
                '/tkrzw.DBMService/ShouldBeRebuilt',
                request_serializer=tkrzw__rpc__pb2.ShouldBeRebuiltRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.ShouldBeRebuiltResponse.FromString,
                )
        self.Synchronize = channel.unary_unary(
                '/tkrzw.DBMService/Synchronize',
                request_serializer=tkrzw__rpc__pb2.SynchronizeRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.SynchronizeResponse.FromString,
                )
        self.SearchModal = channel.unary_unary(
                '/tkrzw.DBMService/SearchModal',
                request_serializer=tkrzw__rpc__pb2.SearchModalRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.SearchModalResponse.FromString,
                )
        self.Stream = channel.stream_stream(
                '/tkrzw.DBMService/Stream',
                request_serializer=tkrzw__rpc__pb2.StreamRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.StreamResponse.FromString,
                )
        self.Iterate = channel.stream_stream(
                '/tkrzw.DBMService/Iterate',
                request_serializer=tkrzw__rpc__pb2.IterateRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.IterateResponse.FromString,
                )
        self.Replicate = channel.unary_stream(
                '/tkrzw.DBMService/Replicate',
                request_serializer=tkrzw__rpc__pb2.ReplicateRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.ReplicateResponse.FromString,
                )
        self.ChangeMaster = channel.unary_unary(
                '/tkrzw.DBMService/ChangeMaster',
                request_serializer=tkrzw__rpc__pb2.ChangeMasterRequest.SerializeToString,
                response_deserializer=tkrzw__rpc__pb2.ChangeMasterResponse.FromString,
                )


class DBMServiceServicer(object):
    """Definition of the database service.
    """

    def Echo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Inspect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMulti(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMulti(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveMulti(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Append(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AppendMulti(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareExchange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Increment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareExchangeMulti(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Clear(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rebuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShouldBeRebuilt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Synchronize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchModal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Iterate(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Replicate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeMaster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DBMServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Echo': grpc.unary_unary_rpc_method_handler(
                    servicer.Echo,
                    request_deserializer=tkrzw__rpc__pb2.EchoRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.EchoResponse.SerializeToString,
            ),
            'Inspect': grpc.unary_unary_rpc_method_handler(
                    servicer.Inspect,
                    request_deserializer=tkrzw__rpc__pb2.InspectRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.InspectResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=tkrzw__rpc__pb2.GetRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.GetResponse.SerializeToString,
            ),
            'GetMulti': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMulti,
                    request_deserializer=tkrzw__rpc__pb2.GetMultiRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.GetMultiResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=tkrzw__rpc__pb2.SetRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.SetResponse.SerializeToString,
            ),
            'SetMulti': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMulti,
                    request_deserializer=tkrzw__rpc__pb2.SetMultiRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.SetMultiResponse.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=tkrzw__rpc__pb2.RemoveRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.RemoveResponse.SerializeToString,
            ),
            'RemoveMulti': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveMulti,
                    request_deserializer=tkrzw__rpc__pb2.RemoveMultiRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.RemoveMultiResponse.SerializeToString,
            ),
            'Append': grpc.unary_unary_rpc_method_handler(
                    servicer.Append,
                    request_deserializer=tkrzw__rpc__pb2.AppendRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.AppendResponse.SerializeToString,
            ),
            'AppendMulti': grpc.unary_unary_rpc_method_handler(
                    servicer.AppendMulti,
                    request_deserializer=tkrzw__rpc__pb2.AppendMultiRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.AppendMultiResponse.SerializeToString,
            ),
            'CompareExchange': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareExchange,
                    request_deserializer=tkrzw__rpc__pb2.CompareExchangeRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.CompareExchangeResponse.SerializeToString,
            ),
            'Increment': grpc.unary_unary_rpc_method_handler(
                    servicer.Increment,
                    request_deserializer=tkrzw__rpc__pb2.IncrementRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.IncrementResponse.SerializeToString,
            ),
            'CompareExchangeMulti': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareExchangeMulti,
                    request_deserializer=tkrzw__rpc__pb2.CompareExchangeMultiRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.CompareExchangeMultiResponse.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=tkrzw__rpc__pb2.CountRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.CountResponse.SerializeToString,
            ),
            'GetFileSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileSize,
                    request_deserializer=tkrzw__rpc__pb2.GetFileSizeRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.GetFileSizeResponse.SerializeToString,
            ),
            'Clear': grpc.unary_unary_rpc_method_handler(
                    servicer.Clear,
                    request_deserializer=tkrzw__rpc__pb2.ClearRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.ClearResponse.SerializeToString,
            ),
            'Rebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.Rebuild,
                    request_deserializer=tkrzw__rpc__pb2.RebuildRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.RebuildResponse.SerializeToString,
            ),
            'ShouldBeRebuilt': grpc.unary_unary_rpc_method_handler(
                    servicer.ShouldBeRebuilt,
                    request_deserializer=tkrzw__rpc__pb2.ShouldBeRebuiltRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.ShouldBeRebuiltResponse.SerializeToString,
            ),
            'Synchronize': grpc.unary_unary_rpc_method_handler(
                    servicer.Synchronize,
                    request_deserializer=tkrzw__rpc__pb2.SynchronizeRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.SynchronizeResponse.SerializeToString,
            ),
            'SearchModal': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchModal,
                    request_deserializer=tkrzw__rpc__pb2.SearchModalRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.SearchModalResponse.SerializeToString,
            ),
            'Stream': grpc.stream_stream_rpc_method_handler(
                    servicer.Stream,
                    request_deserializer=tkrzw__rpc__pb2.StreamRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.StreamResponse.SerializeToString,
            ),
            'Iterate': grpc.stream_stream_rpc_method_handler(
                    servicer.Iterate,
                    request_deserializer=tkrzw__rpc__pb2.IterateRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.IterateResponse.SerializeToString,
            ),
            'Replicate': grpc.unary_stream_rpc_method_handler(
                    servicer.Replicate,
                    request_deserializer=tkrzw__rpc__pb2.ReplicateRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.ReplicateResponse.SerializeToString,
            ),
            'ChangeMaster': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeMaster,
                    request_deserializer=tkrzw__rpc__pb2.ChangeMasterRequest.FromString,
                    response_serializer=tkrzw__rpc__pb2.ChangeMasterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tkrzw.DBMService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DBMService(object):
    """Definition of the database service.
    """

    @staticmethod
    def Echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Echo',
            tkrzw__rpc__pb2.EchoRequest.SerializeToString,
            tkrzw__rpc__pb2.EchoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Inspect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Inspect',
            tkrzw__rpc__pb2.InspectRequest.SerializeToString,
            tkrzw__rpc__pb2.InspectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Get',
            tkrzw__rpc__pb2.GetRequest.SerializeToString,
            tkrzw__rpc__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMulti(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/GetMulti',
            tkrzw__rpc__pb2.GetMultiRequest.SerializeToString,
            tkrzw__rpc__pb2.GetMultiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Set',
            tkrzw__rpc__pb2.SetRequest.SerializeToString,
            tkrzw__rpc__pb2.SetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMulti(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/SetMulti',
            tkrzw__rpc__pb2.SetMultiRequest.SerializeToString,
            tkrzw__rpc__pb2.SetMultiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Remove',
            tkrzw__rpc__pb2.RemoveRequest.SerializeToString,
            tkrzw__rpc__pb2.RemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveMulti(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/RemoveMulti',
            tkrzw__rpc__pb2.RemoveMultiRequest.SerializeToString,
            tkrzw__rpc__pb2.RemoveMultiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Append(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Append',
            tkrzw__rpc__pb2.AppendRequest.SerializeToString,
            tkrzw__rpc__pb2.AppendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AppendMulti(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/AppendMulti',
            tkrzw__rpc__pb2.AppendMultiRequest.SerializeToString,
            tkrzw__rpc__pb2.AppendMultiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareExchange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/CompareExchange',
            tkrzw__rpc__pb2.CompareExchangeRequest.SerializeToString,
            tkrzw__rpc__pb2.CompareExchangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Increment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Increment',
            tkrzw__rpc__pb2.IncrementRequest.SerializeToString,
            tkrzw__rpc__pb2.IncrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareExchangeMulti(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/CompareExchangeMulti',
            tkrzw__rpc__pb2.CompareExchangeMultiRequest.SerializeToString,
            tkrzw__rpc__pb2.CompareExchangeMultiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Count',
            tkrzw__rpc__pb2.CountRequest.SerializeToString,
            tkrzw__rpc__pb2.CountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/GetFileSize',
            tkrzw__rpc__pb2.GetFileSizeRequest.SerializeToString,
            tkrzw__rpc__pb2.GetFileSizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Clear',
            tkrzw__rpc__pb2.ClearRequest.SerializeToString,
            tkrzw__rpc__pb2.ClearResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Rebuild',
            tkrzw__rpc__pb2.RebuildRequest.SerializeToString,
            tkrzw__rpc__pb2.RebuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShouldBeRebuilt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/ShouldBeRebuilt',
            tkrzw__rpc__pb2.ShouldBeRebuiltRequest.SerializeToString,
            tkrzw__rpc__pb2.ShouldBeRebuiltResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Synchronize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/Synchronize',
            tkrzw__rpc__pb2.SynchronizeRequest.SerializeToString,
            tkrzw__rpc__pb2.SynchronizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchModal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/SearchModal',
            tkrzw__rpc__pb2.SearchModalRequest.SerializeToString,
            tkrzw__rpc__pb2.SearchModalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/tkrzw.DBMService/Stream',
            tkrzw__rpc__pb2.StreamRequest.SerializeToString,
            tkrzw__rpc__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Iterate(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/tkrzw.DBMService/Iterate',
            tkrzw__rpc__pb2.IterateRequest.SerializeToString,
            tkrzw__rpc__pb2.IterateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Replicate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tkrzw.DBMService/Replicate',
            tkrzw__rpc__pb2.ReplicateRequest.SerializeToString,
            tkrzw__rpc__pb2.ReplicateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeMaster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tkrzw.DBMService/ChangeMaster',
            tkrzw__rpc__pb2.ChangeMasterRequest.SerializeToString,
            tkrzw__rpc__pb2.ChangeMasterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
